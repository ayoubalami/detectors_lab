
# for INTEL CPU
# FROM debian@sha256:9b0e3056b8cd8630271825665a0613cc27829d6a24906dc0122b3b4834312f7d 

# for ARM rasp CPU
FROM debian@sha256:75ba88a40235cbcaa70686e0e63394b435e0a7f4497fa38f88277c4d43f2c384 

RUN apt-get update && apt-get -y install --no-install-recommends \
	gcc \
	g++ \
	gfortran \
	libopenblas-dev \
	libblas-dev \
	liblapack-dev \
	libatlas-base-dev \
	libhdf5-dev \
	libhdf5-103 \
	pkg-config \
	python3 \
	python3-dev \
	python3-pip \
	python3-setuptools \
	pybind11-dev \
	wget

RUN ln -s /usr/bin/python3 /usr/bin/python
 
 
RUN python3 -m pip install Cython
RUN python3 -m pip install --upgrade pip

# RUN python3 -m pip install tensorflow-2.2.0-cp37-cp37m-linux_armv7l.whl
# RUN python3 -m pip install tensorflow-cpu
# tensorflow-cpu 2.10.0

RUN apt-get -y upgrade
RUN apt-get -y update

WORKDIR /home/pi/app
RUN apt-get install -y cmake
RUN apt-get install -y python3-dev
RUN apt-get install -y python3-numpy

RUN apt-get install -y libavcodec-dev libavformat-dev libswscale-dev
RUN apt-get install -y libgstreamer-plugins-base1.0-dev libgstreamer1.0-dev

RUN apt-get install -y libgtk-3-dev
RUN apt-get install -y libpng-dev
RUN apt-get install -y libjpeg-dev
RUN apt-get install -y libopenexr-dev
RUN apt-get install -y libtiff-dev
RUN apt-get install -y libwebp-dev

RUN apt-get install -y git
RUN git clone https://github.com/opencv/opencv.git

WORKDIR /home/pi/app/opencv
RUN mkdir build
WORKDIR /home/pi/app/opencv/build
RUN cmake ../
# RUN cmake ../ -D ENABLE_NEON=ON  -D ENABLE_VFPV3=ON \
#       -D OPENCV_ENABLE_NONFREE=ON \
#       -D CMAKE_BUILD_TYPE=RELEASE \
#       -D CMAKE_INSTALL_PREFIX=/usr/local \
#       -D OPENCV_EXTRA_M	ODULES_PATH=~/opencv_contrib/modules \
#       -D WITH_FFMPEG=ON -D WITH_TBB=ON -D WITH_GTK=ON -D WITH_V4L=ON -D WITH_OPENGL=ON -D WITH_CUBLAS=ON -DWITH_QT=OFF \
#       -DCUDA_NVCC_FLAGS="-D_FORCE_INLINES"  --prefix=/usr --extra-version='1~16.04.york0' --toolchain=hardened --libdir=/usr/lib/x86_64-linux-gnu \
#       --incdir=/usr/include/x86_64-linux-gnu --arch=amd64 --enable-gpl --disable-stripping --enable-avresample --disable-filter=resample \
#       --enable-avisynth --enable-gnutls --enable-ladspa --enable-libaom --enable-libass --enable-libbluray --enable-libbs2b --enable-libcaca \
#       --enable-libcdio --enable-libcodec2 --enable-libflite --enable-libfontconfig --enable-libfreetype --enable-libfribidi --enable-libgme \
#       --enable-libgsm --enable-libjack --enable-libmp3lame --enable-libmysofa --enable-libopenjpeg --enable-libopenmpt --enable-libopus \
#       --enable-libpulse --enable-librsvg --enable-librubberband --enable-libshine --enable-libsnappy --enable-libsoxr --enable-libspeex \
#       --enable-libssh --enable-libtheora --enable-libtwolame --enable-libvidstab --enable-libvorbis --enable-libvpx --enable-libwavpack \
#       --enable-libwebp --enable-libx265 --enable-libxml2 --enable-libxvid --enable-libzmq --enable-libzvbi --enable-lv2 --enable-omx \
#       --enable-openal --enable-opengl --enable-sdl2 --enable-libdc1394 --enable-libdrm --enable-libiec61883 --enable-chromaprint --enable-frei0r \
#       --enable-libopencv --enable-libx264 --enable-shared ..


RUN make
RUN make install

RUN cp -R /usr/local/lib/python3.*/site-packages/cv2/ /usr/local/lib/python3.*/dist-packages/

WORKDIR /home/pi/app
COPY requirements.txt requirements.txt
RUN python3 -m pip install --default-timeout=100 -r requirements.txt

WORKDIR /home/pi/app/shared
RUN git clone https://github.com/ayoubalami/flask_python .

# CMD ["python","app_controller.py"]

CMD ["tail","-f","/dev/null"]

#################################################################################################
########  docker build --network host -t debian-python_tens_cv:prod .  ##########################
######## docker run -d --name debian-detectors_lab -p 8080:8080 -p 8000:8000 -v ${pwd}/shared:~/shared debian-detectors_lab:prod
######## docker exec -it ££££££££££££££ /bin/bash
######## RUN alias py=/usr/bin/python
######## git config --global credential.helper store
#################################################################################################
